/**
 * Automatically generated types for motia
 * Do NOT edit this file manually.
 * 
 * Consider adding this file to .prettierignore and eslint ignore.
 */
import { EventHandler, ApiRouteHandler, ApiResponse, MotiaStream } from 'motia'

declare module 'motia' {
  interface FlowContextStateStreams {
    
  }

  type Handlers = {
    'UserReadApi': ApiRouteHandler<Record<string, unknown>, ApiResponse<200, { data?: { id: string; email: string; name: string; image?: unknown; emailVerified: boolean; createdAt: string; updatedAt: string }; message?: string }> | ApiResponse<404, { data?: { id: string; email: string; name: string; image?: unknown; emailVerified: boolean; createdAt: string; updatedAt: string }; message?: string }> | ApiResponse<500, { data?: { id: string; email: string; name: string; image?: unknown; emailVerified: boolean; createdAt: string; updatedAt: string }; message?: string }>, never>
    'UserCreateApi': ApiRouteHandler<{ email: string; name: string; password: string }, ApiResponse<201, { data?: { id: string; email: string; name: string; image?: unknown; emailVerified: boolean; createdAt: string; updatedAt: string }; message?: string }> | ApiResponse<400, { data?: { id: string; email: string; name: string; image?: unknown; emailVerified: boolean; createdAt: string; updatedAt: string }; message?: string }> | ApiResponse<500, { data?: { id: string; email: string; name: string; image?: unknown; emailVerified: boolean; createdAt: string; updatedAt: string }; message?: string }>, never>
    'ExpenseReadApi': ApiRouteHandler<Record<string, unknown>, ApiResponse<200, { data?: { id: string; description: string; amount: number; userId: string; expenseCategoryId: string }; message?: string }> | ApiResponse<500, { data?: { id: string; description: string; amount: number; userId: string; expenseCategoryId: string }; message?: string }>, never>
    'ExpenseCreateApi': ApiRouteHandler<{ description: string; amount: number; userId: string; expenseCategoryId: string }, ApiResponse<201, { data?: { id: string; description: string; amount: number; userId: string; expenseCategoryId: string }; message?: string }> | ApiResponse<500, { data?: { id: string; description: string; amount: number; userId: string; expenseCategoryId: string }; message?: string }>, never>
    'ExpenseCategoryReadApi': ApiRouteHandler<Record<string, unknown>, ApiResponse<200, { data?: { id: string; name: string; userId: string }; message?: string }> | ApiResponse<404, { data?: { id: string; name: string; userId: string }; message?: string }> | ApiResponse<500, { data?: { id: string; name: string; userId: string }; message?: string }>, never>
    'ExpenseCategoryCreateApi': ApiRouteHandler<{ name: string; userId: string }, ApiResponse<201, { data?: { id: string; name: string; userId: string }; message?: string }> | ApiResponse<500, { data?: { id: string; name: string; userId: string }; message?: string }>, never>
    'AuthEmailSignupApi': ApiRouteHandler<{ name: string; email: string; password: string; image?: string; callbackURL?: string; rememberMe?: boolean }, ApiResponse<200, { data?: { token: unknown; user: { id: string; email: string; name: string; image?: unknown; emailVerified: boolean; createdAt: string; updatedAt: string } }; message?: string }> | ApiResponse<500, { data?: { token: unknown; user: { id: string; email: string; name: string; image?: unknown; emailVerified: boolean; createdAt: string; updatedAt: string } }; message?: string }>, never>
    'AuthEmailSigninApi': ApiRouteHandler<{ email: string; password: string; callbackURL?: string; rememberMe?: boolean }, ApiResponse<200, { data?: { redirect: boolean; token: string; url?: string; user: { id: string; email: string; name: string; image?: unknown; emailVerified: boolean; createdAt: string; updatedAt: string } }; message?: string }> | ApiResponse<500, { data?: { redirect: boolean; token: string; url?: string; user: { id: string; email: string; name: string; image?: unknown; emailVerified: boolean; createdAt: string; updatedAt: string } }; message?: string }>, never>
  }
}